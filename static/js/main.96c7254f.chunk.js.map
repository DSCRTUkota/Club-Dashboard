{"version":3,"sources":["Components/App.js","index.js"],"names":["useStylesDrawer","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","style","backgroundColor","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","paper","direction","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","color","fontSize","ListItemText","primary","paragraph","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96c7254f.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nconst drawerWidth = 240;\r\n\r\nconst useStylesDrawer = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    \r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n export default function MiniDrawer() {\r\n  const classes = useStylesDrawer();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n      style={{ backgroundColor: '#53E0BC' }}\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            \r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n           DashBoard\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Home', 'Events'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <HomeIcon color=\"primary\" fontSize=\"large\"/> :<EmojiEventsIcon color=\"primary\"  fontSize=\"large\" />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n            {['Login', 'SignUp'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <ExitToAppIcon color=\"primary\" fontSize=\"large\"/> :<AccountBoxIcon color=\"primary\"  fontSize=\"large\" />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['FAQs'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{<HelpIcon fontSize=\"large\" color=\"primary\"/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <div>\r\n          <h1>About Us</h1>\r\n        </div>\r\n        <Typography paragraph>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt<br></br>\r\n          ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum<br></br>\r\n          facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit<br></br>\r\n          gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id<br></br>\r\n          donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit<br></br>\r\n          adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.<br></br>\r\n          Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis<br></br>\r\n          imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget<br></br>\r\n          arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem<br></br>\r\n          donec massa sapien faucibus et molestie ac.\r\n        </Typography>\r\n      \r\n      </main>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MiniDrawer from './Components/App.js';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MiniDrawer/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}